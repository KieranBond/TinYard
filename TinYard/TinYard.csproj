<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>TinYard is a C# framework built to provide easy DI, event system and more. https://github.com/TinYard/TinYard</Description>
    <PackageProjectUrl>https://github.com/TinYard/TinYard</PackageProjectUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <RepositoryUrl>https://github.com/TinYard/TinYard</RepositoryUrl>
    <RepositoryType>Github</RepositoryType>
    <PackageTags>C#, dll, framework, DI, Events, Dependency Injection, IoC, Commands</PackageTags>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <FileVersion>1.1.1.0</FileVersion>
    <Version>1.2.0</Version>
    <PackageReleaseNotes>Release 1.2.0

* What is new?
  * Command System Extension, and Guards for Commands
  * Callback Timer Extension
  * Context Detain and Release functionality

* What has changed?
  * Mediators can be mapped to Interfaces
  * Multiple Mediators can be mapped to a View
  * Context has a `PostInitialize` Hook
  * GetMappingValue&lt;T&gt; returns object of Type T
  * Values being Injected into another class are also injected into prior to injection

* Bug fixes
    * EventDispatcher `AddListener&lt;T&gt;` function now will not throw an error when being used. `AddListener(Enum type, Action callback)` will now not throw an exception if type is null also.</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
